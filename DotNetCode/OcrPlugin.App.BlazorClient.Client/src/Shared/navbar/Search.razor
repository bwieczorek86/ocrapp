@using OcrPlugin.App.BlazorClient.Client.src.Shared.components;
@using OcrPlugin.App.BlazorClient.Client.Utils.RouteHelper
@using System.Timers;

@inject SomethingChangedEvent _somethingChangedEvent

<Styled @bind-Classname="@_outerBox">
    border: 10px solid rgb(71, 136, 199);
    width: 23.35vw;
    border-radius: 15px;
    margin: auto 1vh auto 0px;
    height: 52.5px;
    display: flex;
</Styled>

<Styled @bind-Classname="@_input">
    font-size: 35px;
    font-weight: 100;
    border-radius: 15px;
    margin: -10px;
    border: 10px solid rgb(71, 136, 199);
    width: 88%;
    outline: 0px;
    padding-left: 20px;
    letter-spacing: -1px;
</Styled>

<Styled @bind-Classname="@_iconBorder">
    width: 12%;
    border: 10px solid rgb(71, 136, 199);
    border-radius: 15px;
    padding: 0px;
    justify-content: center;
    margin: -10px -10px -10px auto;
</Styled>

<div class="@_outerBox">
    <input class="@_input" placeholder="Szukaj..." @bind-value="@_searchField" @bind-value:event="oninput" @onkeyup="@HandleKeyUp">
    <div class="@_iconBorder">
        <div style="transform: translateY(20%);">
            <Icon Height="32" Width="32" BgColor="rgb(71, 136, 199)" IconName="search" Margin="auto"></Icon>
        </div>
    </div>
</div>

@code {
    private string _outerBox, _input, _iconBorder;

    private string _searchField;
    private int _debounceMilliseconds = 250;
    private Timer _timer;

    protected override void OnInitialized()
    {
        _timer = new Timer(_debounceMilliseconds);
        _timer.Elapsed += OnUserFinish;
        _timer.AutoReset = false;
    }

    private async void OnUserFinish(object sender, ElapsedEventArgs args)
    {
        await InvokeAsync(async () => {
            await _somethingChangedEvent.Notify(SomethingChangedEventType.Search, _searchField);
        });
    }

    void HandleKeyUp(KeyboardEventArgs e)
    {
        _timer.Stop();
        _timer.Start();
    }

    void Dispose()
    {
        _timer?.Dispose();
    }
}